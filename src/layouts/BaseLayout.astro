---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  canonical?: string;
}

const { 
  title, 
  description = "Steven Silvestri - Full Stack Developer specializing in React, TypeScript, and cloud technologies",
  image = "/og-image.jpg",
  canonical 
} = Astro.props;

const canonicalURL = canonical || new URL(Astro.url.pathname, Astro.site);
import "../global.css";
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />

    <title>{title}</title>

    <!-- Preload fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
    
    <!-- JSON-LD structured data -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Person",
        "name": "Steven Silvestri",
        "jobTitle": "Full Stack Developer",
        "url": "https://ssilve1989.github.io",
        "sameAs": [
          "https://www.linkedin.com/in/steven-silvestri-65734780/",
          "https://github.com/ssilve1989"
        ],
        "knowsAbout": ["React", "TypeScript", "Node.js", "Python", "AWS", "Docker"]
      }
    </script>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 font-sans antialiased transition-colors duration-300">
    <!-- Skip to main content link for accessibility -->
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-blue-600 text-white px-4 py-2 rounded-md z-50">
      Skip to main content
    </a>
    
    <main id="main-content" class="min-h-screen">
      <slot />
    </main>

    <!-- Theme toggle script -->
    <script>
      // Theme detection and toggle
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
      
      window.localStorage.setItem('theme', theme!);
    </script>

    <!-- Service Worker cleanup script -->
    <script>
      // Clean up any old service workers from the previous React SPA
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.getRegistrations().then(function(registrations) {
          for(let registration of registrations) {
            registration.unregister().then(function(success) {
              if (success) {
                console.log('Successfully unregistered old service worker');
              }
            });
          }
        }).catch(function(err) {
          console.log('Service Worker unregistration failed: ', err);
        });
      }
    </script>
  </body>
</html>

<style>
  /* Custom font family */
  .font-sans {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  }
  
  .font-mono {
    font-family: 'JetBrains Mono', 'SF Mono', Monaco, Inconsolata, 'Roboto Mono', 'Source Code Pro', monospace;
  }
</style> 
