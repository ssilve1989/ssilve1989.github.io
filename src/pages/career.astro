---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all experience data for timeline
const allExperience = await getCollection('experience');
const timelineData = allExperience
  .sort((a, b) => new Date(b.data.startDate).getTime() - new Date(a.data.startDate).getTime());
---

<BaseLayout 
  title="Career Timeline - Steven Silvestri"
  description="Professional career timeline of Steven Silvestri showing progression through various roles in software engineering."
>
  <div class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-blue-900 py-20">
    <div class="container mx-auto px-6 max-w-4xl">
      <!-- Header -->
      <div class="text-center mb-16">
        <h1 class="text-5xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-blue-800 bg-clip-text text-transparent mb-4">
          Career Timeline
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-300">
          My professional journey in software engineering
        </p>
      </div>

      <!-- Timeline -->
      <div class="relative">
        <!-- Timeline line -->
        <div class="absolute left-1/2 transform -translate-x-1/2 w-1 bg-gradient-to-b from-blue-500 to-purple-600 h-full rounded-full"></div>
        
        <!-- Timeline items -->
        <div class="space-y-12">
          {timelineData.map((job, index) => {
            const startDate = job.data.startDate.toLocaleDateString('en-US', { 
              month: 'short', 
              year: 'numeric',
              timeZone: 'UTC'
            });
            const endDate = job.data.current 
              ? 'Present' 
              : job.data.endDate 
                ? job.data.endDate.toLocaleDateString('en-US', { 
                    month: 'short', 
                    year: 'numeric',
                    timeZone: 'UTC'
                  })
                : 'Present';
            
            const isEven = index % 2 === 0;
            
            return (
              <div class={`relative flex items-center ${isEven ? 'flex-row-reverse' : ''}`}>
                <!-- Timeline node -->
                <div class="absolute left-1/2 transform -translate-x-1/2 w-6 h-6 bg-white dark:bg-gray-800 border-4 border-blue-500 rounded-full z-10 shadow-lg"></div>
                
                <!-- Content card -->
                <div class={`w-5/12 ${isEven ? 'text-right' : 'text-left'}`}>
                  <div class={`bg-white dark:bg-gray-800 rounded-xl shadow-xl border border-gray-200 dark:border-gray-700 p-6 transform transition-all duration-300 hover:scale-105 hover:shadow-2xl ${isEven ? 'mr-auto' : 'ml-auto'}`}>
                    <!-- Date badge -->
                    <div class={`inline-block px-3 py-1 bg-gradient-to-r from-blue-500 to-purple-600 text-white text-sm font-medium rounded-full mb-4`}>
                      {startDate} - {endDate}
                    </div>
                    
                    <!-- Company and position -->
                    <div class="mb-4">
                      <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-1">
                        {job.data.position}
                      </h3>
                      <div class="flex items-center gap-2 text-blue-600 dark:text-blue-400">
                        {job.data.website ? (
                          <a 
                            href={job.data.website} 
                            target="_blank" 
                            rel="noopener noreferrer"
                            class="hover:underline font-medium"
                          >
                            {job.data.company}
                          </a>
                        ) : (
                          <span class="font-medium">{job.data.company}</span>
                        )}
                        <span class="text-gray-400">â€¢</span>
                        <span class="text-gray-600 dark:text-gray-400 text-sm">{job.data.location}</span>
                      </div>
                    </div>
                    
                    <!-- Description -->
                    <p class="text-gray-700 dark:text-gray-300 mb-4 leading-relaxed">
                      {job.data.description}
                    </p>
                    
                    <!-- Achievements -->
                    {job.data.achievements && job.data.achievements.length > 0 && (
                      <div class="mb-4">
                        <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-2">Key Achievements:</h4>
                        <ul class="space-y-1">
                          {job.data.achievements.slice(0, 3).map((achievement) => (
                            <li class="flex items-start gap-2">
                              <div class="w-1.5 h-1.5 bg-blue-500 rounded-full mt-2 flex-shrink-0"></div>
                              <span class="text-sm text-gray-600 dark:text-gray-400">{achievement}</span>
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}
                    
                    <!-- Technologies -->
                    <div>
                      <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-2">Technologies:</h4>
                      <div class="flex flex-wrap gap-1">
                        {job.data.technologies.slice(0, 6).map((tech) => (
                          <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded text-xs font-medium">
                            {tech}
                          </span>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
        
        <!-- Timeline end -->
        <div class="flex justify-center mt-12">
          <div class="w-4 h-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full shadow-lg"></div>
        </div>
      </div>
      
      <!-- Back to home -->
      <div class="text-center mt-16">
        <a 
          href="/" 
          class="inline-flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
          </svg>
          Back to Home
        </a>
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  /* Custom animations for timeline items */
  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  /* Apply animations on scroll */
  .timeline-item-left {
    animation: slideInLeft 0.6s ease-out;
  }
  
  .timeline-item-right {
    animation: slideInRight 0.6s ease-out;
  }
</style> 
